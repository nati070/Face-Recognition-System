[{"id":"5539219c.948cd","type":"tab","label":"Monitor_entry","disabled":false,"info":""},{"id":"7196cd16.92b724","type":"websocket out","z":"5539219c.948cd","name":"","server":"641a5868.ed21a8","client":"","x":1180,"y":240,"wires":[]},{"id":"9c854ae7.9df7c8","type":"http response","z":"5539219c.948cd","name":"","statusCode":"","headers":{},"x":990,"y":60,"wires":[]},{"id":"291b5788.e83248","type":"http in","z":"5539219c.948cd","name":"","url":"/simple","method":"get","swaggerDoc":"","x":559,"y":60,"wires":[["7daedf90.e3819"]]},{"id":"7daedf90.e3819","type":"template","z":"5539219c.948cd","name":"MainPage","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n<head>\n    <style>\n        * {\n            box-sizing: border-box;\n        }\n        .homePage {\n            object-fit: cover;\n            width: 100%;\n            height: 100vh;\n            position: absolute;\n            top: 0;\n            left: 0;\n            overflow: hidden;\n        }\n\n        .authorizedText {\n            position: absolute;\n            text-align: center;\n            color: white;\n            top: 10%;\n            left: 39%;\n            font-size: 200%;\n        }\n\n        .picOnDB {\n            position: absolute;\n            width: 250px;\n            height: 300px;\n            left: 50%;\n            top: 35%;\n        }\n\n        .getTheName {\n            position: absolute;\n            top: 60%;\n            z-index: 99;\n            right: 45%;\n            font-size: 40px;\n        }\n\n        .detailsPerson {\n            position: absolute;\n            top: 30%;\n            z-index: 99;\n            right: 20%;\n            font-size: 40px;\n        }\n\n        .connection {\n            position: absolute;\n            right: 5%;\n            bottom: 5%;\n            font-size: 150%;\n        }\n\n        .msg {\n            position: absolute;\n            top: 70%;\n            left: 45%;\n            font-size: 200%;\n            color: white;\n        }\n\n\n    </style>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\", \"ws/simple\");\n        function wsConnect() {\n            console.log(\"connect\", wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function (msg) {\n                var data = msg.data;\n                //console.log(data);\n                //check what we got from the server if it is the name or snapshot or pic from DB\n                if (data.length < 30) {\n                    //ws.send(JSON.stringify({data:data}));\n                    identifyPerson(data);\n                }\n                else if (data.includes(\".png\")) {\n                    line = data;\n                    var DBpic = document.getElementById('DBpic');\n                    DBpic.innerHTML = \"<img style='display:block; width:250px;height:300px;' src=\" + line + \">\";                                \n                }\n                else {\n                    line = \"<img style='display:block; width:250px;height:300px;' src=\\\"data:image/png;base64,\" + data + \"\\\" alt=\" + \"\\\"Red dot\\\"\" + \"/>\";\n                    var snapshot = document.getElementById('snapshot');\n                    snapshot.innerHTML = line; \n                }\n            }\n            ws.onopen = function () {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                document.getElementById('status').style.color = \"Green\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function () {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                document.getElementById('status').style.color = \"Red\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect, 3000);\n            }\n        }\n\n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n          //change screen background to red and output the snapshot \n        function changeBGRed() {\n            var video = document.getElementById('myVideo');\n            video.pause();\n            video.src = \"https://cdn.kapwing.com/final_5f5508092f85350083b949f3_168017.mp4\";\n\n            //button  to aprove unautorized person\n            var button = document.createElement('button');\n            button.className = \"msg\";\n            button.innerHTML = \"approve enter!\";\n            button.style.left = \"45%\";\n            button.style.top = \"80%\";\n            button.style.fontSize = \"200%\";\n            button.addEventListener(\"click\", function () {\n                //button.style.visibility = 'hidden';\n                location.reload();\n            });\n\n            document.body.appendChild(button);\n        }\n          //change screen background to blue\n        function changeBGBlue() {\n            var video = document.getElementById('myVideo');\n            video.pause();\n            video.src = \"https://cdn.kapwing.com/final_5f55079c0a793e007d469f26_235305.mp4\";   //\n        }\n\n\n        //change screen background to green\n        function changeBGGreen() {\n            var video = document.getElementById('myVideo');\n            video.pause();\n            video.src = \"https://cdn.kapwing.com/final_5f55086448a16a002c15f0e7_187884.mp4\";\n        }\n\n        // person was identify by the camera give alert or approve\n        async function identifyPerson(id) {\n            var line = \"\";  // or uncomment this to overwrite the existing message\n            // parse the incoming message as a JSON object\n            // id = document.getElementById('messages').innerHTML;\n            console.log(id);\n            // undefined undefined \n            if (id == \"undefined undefined\") {\n                changeBGRed();\n                // replace the messages div with the new \"line\"\n                line += \"<p>\" + \"warning: unauthorized person\" + \"</p>\";\n                var msg = document.getElementById('messages');\n                msg.innerHTML = line;\n                msg.style.left = \"40%\";\n                snapshot.style.position = \"absolute\";\n                snapshot.style.left = \"45%\";\n                snapshot.style.top = \"35%\";\n                \n            }\n            else if (id != \"\") {\n                line += \"<p> Name: \" + id + \"</p>\";\n                changeBGGreen();\n                snapshot.style.position = \"absolute\";\n                snapshot.style.left = \"37%\";\n                snapshot.style.top = \"35%\";\n\n                DBpic.style.position = \"absolute\";\n                DBpic.style.left = \"50%\";\n                DBpic.style.top = \"35%\"\n                \n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                await sleep(15000);\n                // build the output from the topic and payload parts of the object\n               location.reload();\n                \n            }\n        }\n        function sleep(ms) {\n            return new Promise(resolve => setTimeout(resolve, ms));\n        }\n    </script>\n</head>\n\n<body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n    <div class=homePage>\n        <!-- The video -->\n        <video autoplay muted loop id=\"myVideo\" src=\"https://cdn.kapwing.com/final_5f55079c0a793e007d469f26_235305.mp4\"\n            type=\"video/mp4\">\n        </video>\n        <div>\n            <h1 class=authorizedText>\n                <strong>authorized/unauthorized enter</strong>\n                <hr />\n            </h1>\n            <div id=\"snapshot\"></div>\n            <div class=msg id=\"messages\"></div>\n            <div class=\"picOnDB\" id = DBpic></div>\n            <div class=connection>\n                <div id=\"status\">unknown</div>\n            </div>\n        </div>\n    </div>\n</body>\n\n</html>","x":760,"y":60,"wires":[["9c854ae7.9df7c8"]]},{"id":"68a62ab4.745514","type":"websocket in","z":"5539219c.948cd","name":"","server":"641a5868.ed21a8","client":"","x":1060,"y":640,"wires":[["17a54c68.b42464"]]},{"id":"17a54c68.b42464","type":"debug","z":"5539219c.948cd","name":"","active":true,"console":"false","complete":"false","x":1290,"y":640,"wires":[]},{"id":"1379af9a.4f5ba","type":"mysql","z":"5539219c.948cd","mydb":"146edf88.8d055","name":"openmv_mysql","x":520,"y":240,"wires":[["cc691ec4.4e17c"]]},{"id":"bd1da634.efc6b8","type":"function","z":"5539219c.948cd","name":"IdPerson","func":"var idPrson  = 0 //  msg.payload;\nmsg.topic = 'select * from openmv.person  where PersonID LIKE ' + idPrson;\nreturn msg;\n","outputs":1,"noerr":0,"x":280,"y":240,"wires":[["1379af9a.4f5ba"]]},{"id":"cc691ec4.4e17c","type":"function","z":"5539219c.948cd","name":"isExist","func":"if (msg.payload.length === 0){\n     throw \"undefined person in opem camera DB\";\n}\nreturn msg;","outputs":1,"noerr":0,"x":750,"y":240,"wires":[["bc0a8f9b.40153","7bff5848.4c3a28","fd9f1ebe.23dee"]]},{"id":"bc0a8f9b.40153","type":"function","z":"5539219c.948cd","name":"addToTimeTable","func":"var id = msg.payload[0].PersonID;\nmsg.topic = 'INSERT INTO openmv.who_entered (PersonID ,EnteredTime) VALUES (' + id + ', CURRENT_TIMESTAMP);'\n\nreturn msg;","outputs":1,"noerr":0,"x":940,"y":160,"wires":[["e411e729.008ae8"]]},{"id":"e411e729.008ae8","type":"mysql","z":"5539219c.948cd","mydb":"146edf88.8d055","name":"openmv_mysql","x":1180,"y":160,"wires":[[]]},{"id":"7bff5848.4c3a28","type":"function","z":"5539219c.948cd","name":"uploadName","func":"msg.payload = msg.payload[0].LastName +\" \" + msg.payload[0].FirstName;\nreturn msg;","outputs":1,"noerr":0,"x":930,"y":240,"wires":[["7196cd16.92b724"]]},{"id":"d970a88d.633f68","type":"e-mail","z":"5539219c.948cd","server":"smtp.gmail.com","port":"465","secure":true,"tls":false,"name":"nnati070@gmail.com","dname":"NatiGmail","x":1220,"y":320,"wires":[]},{"id":"fd9f1ebe.23dee","type":"function","z":"5539219c.948cd","name":"IfUndefined ","func":"if ( msg.payload[0].PersonID === 0){\n   msg.topic = \"warning\"\n   msg.payload =  \"warning: undefined person\";\n   return msg;\n }","outputs":1,"noerr":0,"x":930,"y":320,"wires":[["d970a88d.633f68"]]},{"id":"612704.3cd108fc","type":"mqtt in","z":"5539219c.948cd","name":"openmv/test","topic":"openmv/test","qos":"2","datatype":"auto","broker":"b091e7e9.d57e68","x":70,"y":300,"wires":[["bd1da634.efc6b8","a935e46c.4ad0f8"]]},{"id":"53be3c62.b48114","type":"inject","z":"5539219c.948cd","name":"Tick every 15 secs","topic":"test","payload":"","payloadType":"date","repeat":"15","crontab":"","once":false,"onceDelay":"","x":90,"y":180,"wires":[[]]},{"id":"61ccc5d9.540a9c","type":"mqtt in","z":"5539219c.948cd","name":"","topic":"openmv/pic","qos":"2","datatype":"base64","broker":"b091e7e9.d57e68","x":250,"y":820,"wires":[["581422d9.e4fc4c","5f27153d.927acc"]]},{"id":"581422d9.e4fc4c","type":"base64","z":"5539219c.948cd","name":"","action":"","property":"payload","x":460,"y":820,"wires":[[]]},{"id":"7e5c7e12.a3f8a","type":"image","z":"5539219c.948cd","name":"","width":160,"data":"payload","dataType":"msg","thumbnail":false,"active":true,"pass":false,"outputs":0,"x":640,"y":820,"wires":[]},{"id":"5f27153d.927acc","type":"websocket out","z":"5539219c.948cd","name":"","server":"641a5868.ed21a8","client":"","x":480,"y":740,"wires":[]},{"id":"823bcbee.d6d598","type":"inject","z":"5539219c.948cd","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":80,"y":740,"wires":[["df6ebf5d.c7f82"]]},{"id":"df6ebf5d.c7f82","type":"function","z":"5539219c.948cd","name":"EXAMPLE1","func":"msg.payload = \"\"\nreturn msg;","outputs":1,"noerr":0,"x":270,"y":740,"wires":[[]]},{"id":"c6f8962b.1c2958","type":"comment","z":"5539219c.948cd","name":"website","info":"the website itsself\n","x":410,"y":60,"wires":[]},{"id":"a3c04ae8.12f2e8","type":"comment","z":"5539219c.948cd","name":"picfromcam","info":"got a pic from the openmv camera and send it t the web","x":90,"y":820,"wires":[]},{"id":"a935e46c.4ad0f8","type":"function","z":"5539219c.948cd","name":"idPersonImg","func":"var idPrson  = 0// msg.payload;\nmsg.topic = 'select * from openmv.pictue_of_person where PersonID LIKE ' + idPrson;\nreturn msg;\n","outputs":1,"noerr":0,"x":290,"y":420,"wires":[["fd4ccbcd.03a7a8"]]},{"id":"fd4ccbcd.03a7a8","type":"mysql","z":"5539219c.948cd","mydb":"146edf88.8d055","name":"openmv_mysql","x":540,"y":420,"wires":[["e45e4152.b7b93"]]},{"id":"e45e4152.b7b93","type":"function","z":"5539219c.948cd","name":"isExist","func":"if (msg.payload.length === 0){\n     throw \"undefined person in opem camera DB\";\n}\nreturn msg;","outputs":1,"noerr":0,"x":730,"y":420,"wires":[["4d5549fe.f50468"]]},{"id":"7af8feb6.1c9d7","type":"websocket out","z":"5539219c.948cd","name":"","server":"641a5868.ed21a8","client":"","x":1160,"y":420,"wires":[]},{"id":"4d5549fe.f50468","type":"function","z":"5539219c.948cd","name":"uploadIMG","func":"msg.payload = msg.payload[0].Image;\nreturn msg;","outputs":1,"noerr":0,"x":950,"y":420,"wires":[["7af8feb6.1c9d7"]]},{"id":"ea0c8727.4dca48","type":"inject","z":"5539219c.948cd","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":60,"y":400,"wires":[[]]},{"id":"5cef57e.0436fa8","type":"e-mail","z":"5539219c.948cd","server":"smtp.gmail.com","port":"435","secure":false,"tls":false,"name":"nnati070@gmail.com","dname":"natiMail","x":1580,"y":320,"wires":[]},{"id":"641a5868.ed21a8","type":"websocket-listener","z":"5539219c.948cd","path":"/ws/simple","wholemsg":"false"},{"id":"146edf88.8d055","type":"MySQLdatabase","z":"","name":"","host":"127.0.0.1","port":"3306","db":"openmv","tz":"","charset":"UTF8"},{"id":"b091e7e9.d57e68","type":"mqtt-broker","z":"","name":"","broker":"test.mosquitto.org","port":"1883","tls":"","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","willTopic":"","willQos":"0","willRetain":"false","willPayload":""}]